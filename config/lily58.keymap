/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <13 14>;
            bindings = <&kp ESC>;
        };
        combo_bspc {
            timeout-ms = <50>;
            key-positions = <25 26>;
            bindings = <&kp RET>;
        };
        combo_ent {
            timeout-ms = <50>;
            key-positions = <33 34>;
            bindings = <&kp RET>;
        };
    };
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};

&mt {
    tapping-term-ms = <200>;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAVE &kp N1       &kp N2   &kp N3   &kp N4   &kp N5                     &kp N6 &kp N7   &kp N8    &kp N9  &kp N0         &kp MINUS
&kp TAB   &kp Q        &kp W    &kp E    &kp R    &kp T                      &kp Y  &kp U    &kp I     &kp O   &kp P          &kp BSLH
&kp BSPC  &kp A        &kp S    &kp D    &lt 1 F  &kp G                      &kp H  &lt 2 J  &kp K     &kp L   &kp SEMI       &kp SQT
&kp LSHFT &mt LCTRL Z  &kp X    &kp C    &lt 4 V  &kp B  &kp BSPC   &kp DEL  &kp N  &kp M    &kp COMMA &kp DOT &mt RCTRL FSLH &mt RSHFT RET
                                &kp LALT &mo 4    &mo 1  &kp SPACE  &kp RET  &mo 2  &kp BSPC &kp RGUI
            >;
        };

        lower_layer {
            bindings = <
&none   &none   &none   &none   &none   &none                   &none   &none   &none   &none   &none   &none
&none   &none   &none   &none   &none   &none                   &none   &none   &none   &none   &none   &none
&none   &none   &none   &none   &none   &none                   &none   &none   &none   &none   &none   &none
&none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none
                        &none   &none   &none   &none   &none   &none   &none   &none
            >;
        };

        raise_layer {
            bindings = <
&none   &none   &none   &none   &none   &none                   &none   &none   &none   &none   &none   &none
&none   &none   &none   &none   &none   &none                   &none   &none   &none   &none   &none   &none
&none   &none   &none   &none   &none   &none                   &none   &none   &none   &none   &none   &none
&none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none
                        &none   &none   &none   &none   &none   &none   &none   &none
            >;
        };
    };

        adjust_layer {
            bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &none   &none                   &none   &none   &none   &none   &none        &none
&reset     &bootloader  &none        &none        &none   &none                   &none   &none   &none   &none   &bootloader  &reset
&none      &none        &none        &none        &none   &none                   &none   &none   &none   &none   &none        &none
&none      &none        &none        &none        &none   &none   &none   &none   &none   &none   &none   &none   &none        &none
                        &none        &none        &none   &none   &none   &none   &none   &none
            >;
        };
    };

        nav_layer {
            bindings = <
&none   &none   &none   &none   &none   &none                   &none   &none   &none   &none   &none   &none
&none   &none   &none   &none   &none   &none                   &none   &none   &none   &none   &none   &none
&none   &none   &none   &none   &none   &none                   &none   &none   &none   &none   &none   &none
&none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none
                        &none   &none   &none   &none   &none   &none   &none   &none
            >;
        };
    };
};

